{\rtf1\ansi\ansicpg1252\cocoartf2509
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue34;\red255\green255\blue255;\red244\green246\blue249;
\red21\green23\blue26;\red10\green77\blue204;}
{\*\expandedcolortbl;;\cssrgb\c14118\c16078\c18039;\cssrgb\c100000\c100000\c100000;\cssrgb\c96471\c97255\c98039;
\cssrgb\c10588\c12157\c13725\c4706;\cssrgb\c1176\c40000\c83922;}
\margl1440\margr1440\vieww15640\viewh11720\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
Network and Security Part\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 You must create a non-root user to connect to the machine and work.\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 sudo adduser roger\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 Use sudo, with this user, to be able to perform operation requiring special rights.\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 sudo usermod -aG sudo roger\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 To switch to the newly created user use:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 su roger\
\pard\pardeftab720\partightenfactor0

\f3\i\fs32 \cf2 \cb3 NB: while entering the password you won't see anything, it is normal.
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 use 
\f2\fs27\fsmilli13600 \cb5 passwd
\f1\fs32 \cb3  if you want to change the password to a more robust one.\cb1 \
\cb3 \'95 We don\'92t want you to use the DHCP service of your machine. You\'92ve got to configure it to have a static IP and a Netmask in \\30.\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 You have to change the default port of the SSH service by the one of your choice. Let's change it to 242.\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 sudo cat /etc/ssh/sshd_config | grep 'Port ' \\\
&& sudo chmod 0777 /etc/ssh/sshd_config \\\
&& sudo sed -i 's/#Port 22/Port 242/g' /etc/ssh/sshd_config /etc/ssh/sshd_config \\\
&& sudo chmod 0644 /etc/ssh/sshd_config \\\
&& sudo cat /etc/ssh/sshd_config | grep 'Port '\
&& sudo service sshd restart\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 SSH access HAS TO be done with publickeys. SSH root access SHOULD NOT be allowed directly, but with a user who can be root.\cb1 \
\cb3 On your Computer:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 mkdir keys\
&& umask 077 \\\
&& wg genkey | tee keys/server_privatekey | wg pubkey > keys/server_publickey \\\
&& ssh-add keys/server_publickey \\\
&& cat keys/server_privatekey\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 Copy the \{content\} of the private key and then in the Virtual Machine type:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 echo '\{content\}' > server_privatekey\
ssh-add server_privatekey\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 Check that the key is now present with:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 .ssh/authorized_keys\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 You have to set the rules of your firewall on your server only with the services used outside the VM. You only need the SSH access\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 $ sudo iptables -P INPUT DROP\
$ sudo iptables -P OUTPUT DROP\
$ sudo iptables -A INPUT -i lo -j ACCEPT\
$ sudo iptables -A INPUT -p tcp -m tcp --dport 242 -j ACCEPT\
$ sudo iptables -A OUTPUT -o lo -j ACCEPT\
$ sudo iptables -A OUTPUT -p tcp --sport 242 -m state --state ESTABLISHED -j ACCEPT\
\pard\pardeftab720\partightenfactor0

\f3\i\fs32 \cf2 \cb3 NB: use the correct ssh port that you previously changed
\f1\i0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Additionally you can disable the password login but make sure that 
\f2\fs27\fsmilli13600 \cb5 .ssh/authorized_keys
\f1\fs32 \cb3  contains the private kay.\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 PasswordAuthentication no\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 You have to set a DOS (Denial Of Service Attack) protection on your open ports of your VM.\cb1 \
\cb3 Run the following script:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 #!bin/sh\
### 1: Drop invalid packets ###\
/sbin/iptables -t mangle -A PREROUTING -m conntrack --ctstate INVALID -j DROP  \
\
### 2: Drop TCP packets that are new and are not SYN ###\
/sbin/iptables -t mangle -A PREROUTING -p tcp ! --syn -m conntrack --ctstate NEW -j DROP\
\
### 3: Drop SYN packets with suspicious MSS value ###\
/sbin/iptables -t mangle -A PREROUTING -p tcp -m conntrack --ctstate NEW -m tcpmss ! --mss 536:65535 -j DROP  \
\
### 4: Block packets with bogus TCP flags ###\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,RST FIN,RST -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,ACK FIN -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,URG URG -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,FIN FIN -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,PSH PSH -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL ALL -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL NONE -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,FIN,PSH,URG -j DROP\
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP  \
\
### 5: Block spoofed packets ###\
/sbin/iptables -t mangle -A PREROUTING -s 224.0.0.0/3 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 169.254.0.0/16 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 172.16.0.0/12 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 192.0.2.0/24 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 192.168.0.0/16 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 10.0.0.0/8 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 0.0.0.0/8 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 240.0.0.0/5 -j DROP\
/sbin/iptables -t mangle -A PREROUTING -s 127.0.0.0/8 ! -i lo -j DROP  \
\
### 6: Drop ICMP (you usually don't need this protocol) ###\
/sbin/iptables -t mangle -A PREROUTING -p icmp -j DROP  \
\
### 7: Drop fragments in all chains ###\
/sbin/iptables -t mangle -A PREROUTING -f -j DROP  \
\
### 8: Limit connections per source IP ###\
/sbin/iptables -A INPUT -p tcp -m connlimit --connlimit-above 111 -j REJECT --reject-with tcp-reset  \
\
### 9: Limit RST packets ###\
/sbin/iptables -A INPUT -p tcp --tcp-flags RST RST -m limit --limit 2/s --limit-burst 2 -j ACCEPT\
/sbin/iptables -A INPUT -p tcp --tcp-flags RST RST -j DROP  \
\
### 10: Limit new TCP connections per second per source IP ###\
/sbin/iptables -A INPUT -p tcp -m conntrack --ctstate NEW -m limit --limit 60/s --limit-burst 20 -j ACCEPT\
/sbin/iptables -A INPUT -p tcp -m conntrack --ctstate NEW -j DROP  \
\
### 11: Use SYNPROXY on all ports (disables connection limiting rule) ###\
# Hidden - unlock content above in "Mitigating SYN Floods With SYNPROXY" section\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 You have to set a protection against scans on your VM\'92s open ports. {\field{\*\fldinst{HYPERLINK "https://unix.stackexchange.com/questions/345114/how-to-protect-against-port-scanners"}}{\fldrslt \cf6 https://unix.stackexchange.com/questions/345114/how-to-protect-against-port-scanners}}\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 # First create ipset lists\
ipset create port_scanners hash:ip family inet hashsize 32768 maxelem 65536 timeout 600\
ipset create scanned_ports hash:ip,port family inet hashsize 32768 maxelem 65536 timeout 6\
\
# And iptables rules\
iptables -A INPUT -m state --state INVALID -j DROP\
iptables -A INPUT -m state --state NEW -m set ! --match-set scanned_ports src,dst -m hashlimit --hashlimit-above 1/hour --hashlimit-burst 5 --hashlimit-mode srcip --hashlimit-name portscan --hashlimit-htable-expire 10000 -j SET --add-set port_scanners src --exist\
iptables -A INPUT -m state --state NEW -m set --match-set port_scanners src -j DROP\
iptables -A INPUT -m state --state NEW -j SET --add-set scanned_ports src,dst\
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf6 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Stop the services you don\'92t need for this project.\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 you can display with:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 service --status-all\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 You need to keep the following ones:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb4 ssh\
ufw\
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf6 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Script part\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 Create a script that updates all the sources of package, then your packages and which logs the whole in a file named /var/log/update_script.log. Create a scheduled task for this script once a week at 4AM and every time the machine reboots. \'95 Make a script to monitor changes of the /etc/crontab file and sends an email to root if it has been modified. Create a scheduled script task every day at midnight.}